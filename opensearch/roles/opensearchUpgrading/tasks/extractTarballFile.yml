---
  - name: find the new extracted directory
    ansible.builtin.find:
      paths: /opt
      file_type: directory
      patterns:
        - "*{{ NEW_OS_VERSION }}*"
      depth: 1
      recurse: false
    register: DIRNAME

  - name: dir state
    become: true
    ansible.builtin.stat:
      path: "{{ DIRNAME['files'][0]['path'] }}/"
    register: existance

  - name: check if os dir exists
    ansible.builtin.debug:
      var: existance.stat.exists

  - name: extract tarball file
    become: true
    ansible.builtin.unarchive:
      remote_src: true
      src: "{{ TARBALL_FILE_LOCATION }}"
      dest: /opt
    when: not existance.stat.exists

  - ansible.builtin.set_fact:
      OPENSEARCH_PATH_CONF: "{{ DIRNAME['files'][0]['path'] }}/config"
  
  - name: debug config path
    ansible.builtin.debug:
      var: OPENSEARCH_PATH_CONF